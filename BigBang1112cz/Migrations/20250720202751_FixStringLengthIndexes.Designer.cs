// <auto-generated />
using System;
using BigBang1112cz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBang1112cz.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250720202751_FixStringLengthIndexes")]
    partial class FixStringLengthIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornCommentDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HornId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HornId");

                    b.HasIndex("UserId");

                    b.ToTable("HornComments");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.ToTable("Horns");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornDownloadDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DownloadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HornId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HornId");

                    b.HasIndex("UserId");

                    b.ToTable("HornDownloads");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornUserDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Zone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("HornUsers");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornUserHistoryDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("LastSeenAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Zone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HornUserHistory");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornCommentDbModel", b =>
                {
                    b.HasOne("BigBang1112cz.Models.Db.HornDbModel", "Horn")
                        .WithMany("Comments")
                        .HasForeignKey("HornId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigBang1112cz.Models.Db.HornUserDbModel", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornDownloadDbModel", b =>
                {
                    b.HasOne("BigBang1112cz.Models.Db.HornDbModel", "Horn")
                        .WithMany()
                        .HasForeignKey("HornId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigBang1112cz.Models.Db.HornUserDbModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornUserHistoryDbModel", b =>
                {
                    b.HasOne("BigBang1112cz.Models.Db.HornUserDbModel", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornDbModel", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BigBang1112cz.Models.Db.HornUserDbModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
